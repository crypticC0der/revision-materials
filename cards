1 Dimensional Arrays /\A standard list array - one index is needed to search for something in an array. https://bit.ly/2tDUYxX\/2 Dimensional Arrays /\An array with 2 indexes needed to search - for example a table could be this.\/Interception of PseudoCode /\The ability to pick out and explain parts of code.\/Big O' /\A measure of complexity within a piece of code.\/Recursion /\The process of looping, calling itself in looping.\/Functions /\A decomposed part of code that has a specific job to output or return something\/Iteration /\Repeating some part of code over and over\/Subroutine /\A decomposed part of problem that *does something*\/Data Mining /\The process of collecting data on user habits or requests\/Binary Search /\A search algorithm that includes comparing the midpoint of an array iteratively.\/Insertion Sort /\A sorting algorithm that includes going through an array iteratively comparing each value to every value before that value.\/Bubble Sort /\Moving through a list, it compared two elements and moves on, moving through the array repeatedly.\/Quick Sort /\\/Merge Sort /\\/Global Variable /\\/Local Variable /\\/Dijkstra's Algorithm /\\/Travelling Salesman Algorithm /\\/Decomposition /\\/Graph Tree /\\/Heuristic /\\/Pipelining /\\/Stack /\\/ALU (Arithmetic Logic Unit) /\The part of the CPU where data is processed and manipulated. Usually arithmetic or logical operations. Allows for decisions to be made.\/Control Unit /\The part of the CPU that manages the execution of instructions. The control unit fetches an instruction, and decodes it before executing it by sending 'control signals' to other parts of the computer.\/Register /\Tiny stores of extremely fast memory located in the CPU, normally designed for where data or control information is stored temporarily when execution is taking place.\/Program Counter (PC) /\A register in the control unit which holds the address of the next instruction to be executed. When each program is executed, this number goes up by 1 to signify the next 'fetch' to be at this address in the RAM.\/Accumulator (ACC) /\A special register within the Arithmetic Unit. It is used to hold the data currently being processed by the CPU. Any data to be processed is stored temporarily in the accumulator.\/Memory Address Register (MAR) /\A register in the CPU that stores the address of the memory location currently in use. In the fetch phase, this would be the address of an instruction; in the execute phase, it would be the address of the data being used.\/Memory Data Register (MDR) /\Used to temporarily store data loaded into the CPU, or written to memory locations. All transfers from memory locations to the CPU go via the Memory Data Register.\/Current Instruction Register (CIR) /\A register in the control unit that stores the instruction type of the next instruction to be carried out by the processor. For example, this could contain the number 3, which in LMC is a 'store' function.\/Buses /\A common physical pathway for signals to travel to and from several components of a computer.\/Data Bus /\Transfers the data from memory location specified by MAR.\/Address Bus /\The part of the bus which carries information about where the data is being sent.\/Control Bus /\This bus carries command and control signals to and from every other component of a computer.\/Fetch /\Decode-Execute - The complete process of retrieving an instruction from a memory source, decoding it and carrying it out (execution). Also known as the instruction cycle.\/Central Processing Unit (CPU) /\The main part of the computer, consisting of the registers, ALU and control unit.\/Clock Speed /\Measured in Hertz, the clock speed is the frequency at which the 'internal clock generates pulses'. This means how fast it can execute instructions. The higher the clock rate, the faster the computer may work. The "clock" is an electronic unit that synchronizes other components by generating pulses of electricity at a constant rate (almost like waves).\/Cores /\A CPU is one 'Core'. A multi-core processor is a single component with two or more independent actual CPU's, which are the units responsible for the fetch-decode-execute cycle. Theoretically, this could 'double' speed but depends on efficiency of splitting up tasks.\/Cache /\A part of the main store between the central processor and the RAM. It has extremely fast access, so sections of a program and other data is copied there to take advantage of its short fetch cycle.\/LMC STA /\Store function, puts the value in the accumulator into the storage location specified.\/LMC LDA /\Loads data from the storage location specified into the accumulator.\/LMC BRA /\'Branches' the next instruction to the address given.\/LMC BRP /\'Branches' the next intruction to the address given if the value in the accumulator is positive or zero.\/LMC BRZ /\'Branches' the next intruction to the address given if the value in the accumulator is zero.\/Pipelining /\An attempt to make machine code as efficient as possible. It relies on the ability for the CPU to split up instructions - it can then fetch, decode, and execute all parts of the instruction at the same time.\/Flushing the Pipe /\During Pipelining, instructions can cause corruption issues if something is being outputted that could cause more problems. (the thing being currently processed could cause damage when outputted - the instruction that is currently be outputted cause be causing corruption issues) Therefore, Flushing the Pipe clears the CPU to move onto the next instruction that it is told to do.\/Interupt /\A signal from a peripheral or instruction that signals an issue that needs addressing. OS needs to prioritise these and fix errors.\/Von Neumann Architecture /\Traditional computer architecture that forms the basis of most digital computer systems. A single control unit manages program control flow following a linear sequence of 'fetch-decode-execute'.\/Harvard Architecture /\A computer architecture with physically separate storage and signal pathways for instructions and data. These early machines had data storage entirely contained within the central processing unit, and provided no access to the instruction storage as data.\/Contemporary Architecture /\Usually a combined selection of the 2 basic architectures' - taking the best of both worlds. Simplicity of Von Neumann, but the useful features of Harvard.\/Input Device /\Any peripheral device that can accept data, presented in the appropriate machine-readable form, decode it and transmit it as electrical pulses to the CPU.\/Output Device /\Any peripheral device that translates signals from the computer into a human-readable form or into a form suitable for reprocessing by the computer at a later stage.\/Storage Device /\Any medium (optical, magnetic, solid state and even paper which holds data or programs.\/Magnetic Storage /\Storage medium which uses surfaces coated with a layer of magnetic material on which data can be stored by magnetically setting the arrangement of the magnetic material. This is done by electromagnetic read/write heads.\/Flash Storage /\Collection of memory chips that is controlled by its own software to make the collection of chips act like a disk drive. Compact, large storage medium.\/Optical Storage /\Storage medium that uses plastic discs on which the data is stored as patterns on the surface in pits and lans. Lightweight, compact, limited by data size.\/Solid State Storage /\Storage medium for main disk drive on a computer, is generally more expensive, therefore less storage space, however is more reliable.\/Hard Disk Drive /\Storage medium for main disk drive on computer, is generally cheaper, therefore more storage space, however can be unreliable.\/Random Access Memory (RAM) /\Volatile main memory. Access times are very fast. Often referred to as Main Memory, although this can be used in main areas of computing and computing storage. When used as main memory this typically can be thought of as containing the Operating System, programs in use and the data those programs are using while the computer is running.\/Read Only Memory (ROM) /\Memory for which the contents may be read by cannot be written to by the computer system. Software in ROM is fixed during manufacturing. It typically holds system boot up instructions. ROM is non-volatile. More modern types of ROM can be written to in limited ways, these include, PROM, EPROM and EAROM.\/Virtual Memory /\A means of extending main storage by using the hard drive as if it were quick-access memory. Operating System is expected to utilise this by prioritising tasks.\/Virtual Storage /\'The Cloud'. Reduces duplication, can be accessed remotely but is less secure and is reliant on bandwidth.\/RAM Advantages /\Volatile so doesn't get clogged up, large storage size, quick access.\/RAM Disadvantages /\Volatile so data can't be stored, expensive, if memory runs out computer crashes.\/ROM Advantages /\Non-volatile so data can be stored, can't be changed, quick access.\/ROM Disadvantages /\Could get clogged up, Small storage size.\/Magnetic /\patterns of magnetisation represents 0 & 1, this is read by a reader.\/Optical /\marks and bumps on a medium, is read by a light beam.\/Solid State /\Uses electronic circuits to represent 1's & 0's.\/Systems Development Life Cycle (SDLC) /\The stages of designing and implementing a new computer system. These stages - analysis, design, implementation, testing and installation - are part of the life cycle made by the main design team.\/Waterfall Model /\An example of system development, where one 'job' almost 'flows' from one to another. These include conception, initiation, analysis, design, construction, testing, production and maintenance.\/Agile Methodologies /\A development cycle that encourages teamwork through iterations and the disregard for team member hierarchy, working closely with a leader to efficiently program, testing it often. Focusses on face-to-face communication rather than massive amounts of written documentation.\/Extreme Programming /\A software development methodology which has many branches - its main goal is to use short development cycles to test often and work collaboratively. One 'type' of Extreme programming is working in pairs to complete a task, with some looking at the larger picture of the code, while others looking closely at every little bit of code.\/Spiral Model /\Another cycle of system development, there are four defined 'quadrants' - planning, risk analysis, use of design methods, client and management evaluation. Once one stage of development has gone full 'circle', the next phase takes place, and so on until completion.\/Rapid Application Development (RAD) /\A design strategy that includes online development and repeated prototyping and evaluation. It is particularly suited to interactive systems, where the user plays an active part in the program, or even programming.\/Black Box Testing /\Outputs are checked after inputs are given. Code is hidden.\/White Box Testing /\Each line of the code is tested, therefore code is understood.\/Alpha Testing /\A small group test an unfinished product with known errors.\/Database /\A collection of organised data.\/Relational Database /\Multiple tables that a user can find relationships between and find specific information.\/Flat File /\A database that can be stored at a plain text file. One record (row), with fields (column) separated by tabs or commas.\/Fields /\'Headings' for the data to be organised when inputted - e.g. name, DOB etc.\/Record (databases) /\A specific row of data. For example, John Smith, 25/01/2002.\/Primary Key /\A field that uniquely identifies a record in a table. For example, a User ID.\/Foreign Key /\The linking field in a foreign table, formed when a relationship between 2 databases is formed. The Foreign Key becomes the Primary Key of the new table. A foreign key could be a User ID.\/Concatenated (attached) Primary Key /\More than one field is added together to form a unique primary key for a table. For example, 'group ID' and 'specific person ID'.\/Secondary Key /\A key field which can be used to index the data in a different order - for example you could sort the data by surname (the secondary key) rather than the primary key (User ID).\/Normalisation (databases) /\The process of arranging data into tables and setting their relationships to move them around in multiple tables, from input forms.\/Indexing /\The process of creating a database index, which is a data structure that improves the speed of data retrieval operations on a dataset table at the cost of additional writes and storage space to maintain the index data structure. This is essentially changing the order of the data and sorting it via a different key.\/0NF /\A table with no normalisation. All data and all fields are in one table.\/First Normal Form (1NF) /\A database relationship (2 or more tables) with repeating groups removed. That is a relation in which the intersection of each tuple (data structure with multiple parts) and attribute contains only one value. For example, a table which labels a ball as yellow and green, with a price in a separate column is not normalised to this - Separate tables must be made which allow the data to have a different row for each colour.\/Second Normal Form (2NF) /\A relation that starts the same as 1NF, with one difference: every attribute must be completely dependent on the primary key. For example, does the employee name rely on the project code?\/Third Normal Form (3NF) /\A relation that starts the same as 1NF and 2NF. If an attribute, which is not a key, is reliant on another attribute more than the primary key in a table, it must be made into a new table.\/Normal Forms /\A way of structuring the data in a relational database according to a set of rules, in order to avoid problems of inefficiency in accessing and maintaining the data. For example, 1NF, 2NF, 3NF.\/Entity Relationship Modelling (ERM) /\The production of a data model for describing data and its organisation within a database.\/ERM One-to-One /\One database can only equal one other row in the database. For example, a country can only have one capital city. [London]----[England]\/ERM One-to-Many /\One database can be equal to multiple rows in the other table. For example, a student can take more than one course (many). [Student]---<[Course]\/ERM Many-to-many /\Not possible as it would result in data redundancy. For example, 'many students take many courses of which take many students'. To fix, you either need a new database or you will need to priorities whether you need to know about the student's many courses or the course's many students.\/Structured Query Language (SQL) /\The language and 'syntax' used to write and run database queries.\/SQL SELECT /\What fields do you want to display?\/SQL FROM /\Which table(s) would you like to use to display data from?\/SQL WHERE /\What search criteria are you going to use to choose records? Search criteria is a boolean statement and is phrased 'where this is true'. When changing records, this is used to set the record which would be updated.\/SQL AND, OR, NOT /\For SQL WHERE statements, these are boolean statements that, in order, needs both criteria to be true; one or both to be true; the opposite to what is true.\/AND /\^ symbol signifies ... can also be written as .(sometimes this . is dropped and it is just shown as XY)\/OR /\∨ symbol that signifies ... can also be written as +\/NOT (negation) /\¬ symbol signifies ... can also be written as x̄\/XOR /\⊕ symbol signifies ...\/B^AvB^C /\B(AvC) is simplified to ...\/X /\Xv(XY) simplifies to ... (AND's & OR's can be switched for the same answer)\/X /\X^X is equal to ...\/X /\XvX is equal to\/Karnaugh Map /\Method of simplifying a complex boolean calculation.\/De Morgan's Law /\States that ¬(XvY) ≡ ¬X^¬Y. Note that this can be used both ways, for any number of variables in the simplification of boolean algebra. For example, ¬(A^B^C) ≡ ¬Av¬Bv¬C. An easy way to remember this is that each term is complemented, and then the ORs become ANDs, and the ANDs become ORs.\/Commutation /\States that XvY ≡ YvX. This is the name of the rule that switches the OR order.\/Association /\States that Xv(Y^Z) ≡ XvYvZ. This is the name of the rule that removes brackets.\/Distribution /\X^Y v X^Z ≡ X^(YvZ). This is the name of the rule that removes duplicates.\/Absorption /\Av(A^B) ≡ A , A^(AvB) ≡ A. This is the name of the rule that absorbs unnecessary boolean operators.\/General Rules /\Av¬A ≡ True , A^¬A ≡ False. This is the name of these rules that help simplification of unneccessary variables.\/Positive /\When there are two NOT's there is a ...\/SQL ORDER BY /\Which fields will you use to sort your records into an order? More than one field can be put here, it 'prioritises' the first field.\/SQL * /\A 'wildcard'. Means everything in query.\/SQL UPDATE /\When you want to update a record, this phrase tells the program which table needs updating.\/SQL SET /\What needs to be changed - describe the change. For example, 'room' could be changed to a different code.\/SQL INSERT INTO /\When inserting data is needed, this says which fields will be added to - eg. teacher name, room etc.\/SQL VALUES /\Sets the values which will be inserted into the fields specified beforehand. eg. 'Mr White' , 'D3'.\/Referential Integrity /\A measure of the consistency of the data in a database. It is violated when a foreign key which a table refers to no longer exists.\/Transaction Processing /\Information processing that is divided into individual, indivisible operations, called transactions. Each transaction must succeed or fail as a complete unit, it can never be only partially complete. For example, when buying a book, a number of transactions (information exchanges) must occur to ensure the book is accounted for, and you are giving the money to the shop. Any one of these transactions fail, the whole transaction fails, therefore ensuring you do not get the book without paying or vice versa.\/Atomicity, Consistency, Isolation, Durability (ACID) /\A set of properties that guarantee that database transactions are processed reliably. For example, a single logical operation on the data is called a transaction. Atomicity re-enforces the rule of full completion or failure. Consistency is a filter that ensures data is in the correct format. Isolation is the isolation of processes, ensuring a transaction is secure and doesn't get mixed up. For example, user A wants to withdraw £100, and user B wants to withdraw £200 from account Z, User A's transaction should be validated and finished before User B's even begins. Durability is the idea of ensuring that a client or business is not 'ripped-off' if a failure is seen. For example, if User A's transaction fails, the £100 should not still be taken from the account.\/Record Locking /\A technique of preventing simultaneous access to data, to stop data inconsistences or double data. For example, two bank clerks updating a client's information on a banking databases at the same time.\/Redundancy /\This occurs in database systems which have a field that is repeated in two or more tables. For instance, when customer data is duplicated and attached with each product bought, then an inconsistency in found, since the customer might change these attributes - both tables must change rather than one.\/Primitive Data Types /\The basic data types provided by a programming language as building blocks. Most languages allow more complicated types. E.g. char, integer, float, Boolean. A 'string' data type is constructed behind the scenes of many char data types.\/Integer /\A data type used to store positive and negative whole numbers.\/Real/floating point /\A data type used to store numbers with a decimal points or a fraction, Rational, represented as an exponents.\/Character /\A single alphanumeric character.\/String /\A sequence of characters and or symbols. E.g. a word or sentence.\/Boolean /\Used to store the logical operators TRUE / FALSE. Often translated to On/Off, Yes/No etc.\/Binary /\A numerical system with only 2 digits - 0 & 1. Computers use this to take instructions from a human. 1 is usually 'on' and 0 is 'off'.\/Sign and Magnitude /\A method in computing of being able to convert numbers (both positive and negative) as a string of binary digits. Worked out by using the 128 column as a sign digit, with the other 7 bits representing the number. 127 is the largest number that can be represented. eg. -125 = 111111101. (0 means positive, 1 means negative & 8 digits follow)\/Two's Complement /\A method in computing of being able to store negative numbers as binary digits. It works by turning the binary digits before the 'content' of the number into a 1 from 0. (Where 0 represents a positive number and 1 represents a negative). To work out, flip all digits and add 1.\/Hexadecimal /\A numerical system that uses 16 as its base, and with 16 digits. The 16 Hex base digits are 0-9 and the letters A-F.\/Denary /\A numerical system that uses 10 as its base. The 10 Decimal base digits are 0-9. This is how we 'normally' count.\/Floating Point Arithmetic /\Performing simple calculations on more than one floating-point number stored in binary notation.\/Bitwise Manipulation /\Algorithmically manipulating bits. Programming tasks that require a 'bit manipulation' include low-level device control and error detection, data compression, encryption algorithms, and optimisation.\/Shifts /\An operation that moves the bits held in a register, called the shift register, either to the left or the right. There are three different types of shift: arithmetic shift, logical shift and cyclic shift. They are distinguished by what happens to the bits that are shifted out of the register at one end and what is moved in to fill the vacant space at the other end.\/AND /\A logical operator. This works by only returning TRUE (1) if both values being compared are TRUE (1).\/OR /\A logical operator. This works by returning TRUE (1) as long as either value being compared is TRUE (1).\/XOR /\A logical operator. This will return TRUE (1) only if the two items being compared are different.\/Character Sets /\The set of symbols that may be represented in a computer. These symbols, called characters, can be letters, digits, spaces or punctuations marks represented in binary, or hexadecimal.\/America Standard Code for Information Interchange (ASCII) /\A character set created for early telecommunication systems in 1963, but proved to be ideal for computer systems. This set uses 7-bits giving 32 control codes and 96 displayable characters (the 8th bit is often used for error checking).\/UNICODE /\Standard character set that replaces the need for any other character set. It incorporates characters from almost all the world's languages. It is a 16-bit extension of ASCII.\/Abstract Thinking /\The simplification of data, the removal of redundant data that is not necessary. For example, a flight simulator does not need to render individual people on the ground, or intricate detail on buildings - instead it should focus on the weather or cockpit detailing.\/Ethics /\Refer to rules provided by an external source, e.g., codes of conduct in workplaces or principles in religions.\/Morals /\Refer to an individual's own principles regarding right and wrong.\/Sequence /\A series of instructions after one another.\/Selection /\A series of intructions but with a choice or branch. For example, IF\/Iteration /\A series of intructions repeated - Loops.\/Count Controlled Loop /\Loop the program a fixed number of times.\/Condition Controlled Loop /\Loop the program until a condition is satisfied.\/Start / Stop /\An oval signifies .. in a flowchart.\/Decision /\Diamond shape signifies ... in a flowchart.\/Process /\Box shape signifies ... in a flowchart.\/Input / Output /\A parallelogram signifies ... in a flowchart.\/Pseudo-Code /\A way of describing an algorithm through text rather than a diagram. (faux code)\/Run-Length Encoding /\A method of lossless compression, this stores the run of data. For example, if the first stored value was 5:9, you would start the from the top left, counting five pixels across in a colour specified in tags, this colour being 9.\/Dictionary Encoding /\Lossless compression also known as the substitution coder, uses a database of repeated strings with references. There is then a list of ordered reference number in order to re construct the message.\/Symmetric Encryption /\\/Assymetric Encryption /\\/Hashing /\\/HTML Tags /\Tells the browser that the code is this language. It represents the root of the document. It is the container for all other elements (except for the <!DOCTYPE> tag). These are also used for separating the headings, which are useful for setting typefaces.\/Computer-related Legislation /\Laws in the UK that say what right's businesses, agencies and individuals possess. Must be able to discuss these with evidence and by name.\/Misuse of Data Act /\Unauthorised Hacking, access with intent to commit crime, unauthorised hacking to modify system. Protects users and business from hackers, however we break these laws very frequently (hack into friends' phone?)\/Copyright, Design and Patents Act /\Gives a copyright holder the right to control the distribution of their product, for example movie piracy breaks this. This is good to try to protect online thieves, however is impossible to police (piratebay for example)\/Regulation of Investigatory Powers Act /\Authorities can force ISP's to hand over user data (and collect it in the first place). They can monitor internet communications as they please. This helps catch criminals or terrorists before they hurt people, however the consumer is not aware of this privacy breach. Also, the laws alter the ISP market (potentially bad for business)\/Data Protection Act /\Requires that companies that store data (virtually every company) must adhere to strict rules on how this data is kept and maintained. It must: be accurate and up-to-date, processed fairly and lawfully, not excessive or kept for too long, data must be kept secure, and not transferred outside of the EU without protection.\/System Life Cycle /\A potential stage of planning where the conception, manufacture, distribution, maintenance, phase-out, and disposal are planned out. This ensures there is minimal waste and the customer is happy with their product for as long as possible, or must be told that an upgrade is needed.\/Static /\Data Structure that does not change size during run-time. Example is Lists or Tuples.\/Dynamic /\Data Structure that changes size during run-time. An example could be an array.\/Array /\Number of elements in an order, or one data type. Can be fixed-length or dynamic.\/Tuple /\An 'aggregate' (combination of separate elements) data structure, usually indexed by name. Elements are called fields.\/'x' Dimensional Array /\The number of separate elements in this array is 'x'. For example, Sale[4, 3, 1] means x = 3.\/Array Indexing /\Array's start with 0 when indexing, not 1.\/Stacks /\A data store where data items are 'pushed' and 'popped'. An example of usage is where the program counters' value is stored when the computer needs to change it. For example, a sub-routine could cause the program counter to move onto other data, and after this is done, the data can be popped back into the program counter to continue the initial routine.\/Reverse Polish Notation /\An arithmetic manipulation, moves the operator to the end of a sum. For example, 6 + 3 would be 6 3 +. Useful in stacks, as you can find the arithmetic operation before the numbers (6 3 + would mean the + was found first)\/Embedded System /\\/Queues /\Used for storing the instructions to execute. There are different types of this, the most basic being a first-served schedule, where new processes join the back.\/Segmentation /\The splitting up of data into fixed sizes to 'fit into' storage mediums. (and therefore maximise efficiency of storage)\/Paging /\The splitting up of data into dynamic, logical sizes to 'fit into' storage mediums. (and therefore maximise efficiency of storage)\/Disk Thrashing /\An occurance where virtual memory is in use - but ineffectively. Data is moved back and forth from the protion of the hard drive at a high rate.\/Classes /\In object-oriented programming, classes hold attributes (variables) and methods (functions) in groups.\/Big O Notation /\A method of showing the time (number of iterations) and the space (storage required) of an algorithm.\/Linear Complexity /\Complexity that rises equally to the number of data objects that the algorithm is working on. Considered a successful solution.\/Quadratic Complexity /\Complexity that rises to the square of the number of data objects that the algorithm is working on. Considered relatively inefficient due to large increases on big data sets.\/Logorithmic Complexity /\Complexity that rises to the log of the number of objects that the algorithm is working on.\/Constant Complexity /\Complexity that stays the same disregarding the size of the data set.\/Binary Search /\Search a sorted list, with O(logn) time complexity, and O(1) space complexity. Goes to the middle index of the list and works up or down based on the value.\/Linear Search /\Search a list, with O(n) time complexity and O(1) space complexity. Starts from the beginning, searching the list sequentially.\/Hash Table /\A table of information that uses a Hash Function to map 'keys' to data. Search is generally independent to the size of the set as keys are calculated based on the data you are searching. (see youtube video on Onedrive)\/Reduced Instruction Set Computer (RISC) /\Used in mobile phones, has a more simple design for running fewer instructions at a lower clock speed. There are fewer ways to address memory.\/Complex Instruction Set Computing (CISC) /\Used in desktops and laptops, has a more complex compiler disign and hardware. Multiple machine cycles per instruction and there are many ways to address memory.\/A Single Machine Cycle /\On a RISC, the device runs ... per instruction.\/Multiple Machine Cycles /\On a CISC, the device runs ... per instruction.\/Different Sized ... each register can be the most optimised /\In a CISC, the device has ... Registers, meaning that ... . (Fill ...)\/The Same Sized ... registers can be used interchangeably. /\In a RISC, the device has ... Registers, meaning that ... . (Fill ...)\/Multiple Instruction, Multiple Data /\Different instructions carried out at the same time on different pieces of data. Super Computers use this.\/Single Instruction, Multiple Data /\Instructions carried on on multiple pieces of data. Often used in multimedia.\/Parallel Processing /\General term, when a computer carries out multiple instructions at once.\/Graphical Processing Unit (GPU) /\This chip is generally slow for general use, however they are very quick to carry out simple instructions on large data sets. For example changing the colour of many objects in a visual representation when a light is turned on.\/Knowledge Based Systems /\Solving a problem, usually solved by humans, based on a knowledge base.\/Heuristics /\Proceeding to a solution following loosely defined rules, such as previous encounters or knwledge bases.\/Knowledge Base /\Data stored here is usually poorly defined and must be infered to be useful.\/Diagnosis, Monitering, Design, Control, Debugging. /\Example uses of a Knowledge Based System.\/Knowledge Based, Inference Engine, User Interface /\Components of a Knowledge Based System.\/Requirements, Design, Development, Testing, Maintenance. /\The stages of a waterfall system life cycle.\/Automated Decision Making /\Making a deicison that is made soley on data automatically proccurred.\/Global Variable /\A variable that can be used and changed inside or outside of a function. In Python, you declare a variable as global to use it within functions.\/Local Variable /\A variable that can only be used in a single function and is not set outside of that specific function.\/D-Type Flip Flop /\A basic cicuit that can storage one bit and flip it between values. It can only be in two stable states - representing 1 and 0.\/Half Adder /\Logic circuit with two inputs and two outputs. One output is the digit bit produced by the addition of the input bits, the other a carry bit that will be used in the next stage.\/Full Adder /\Logic circuit with three inputs and two outputs. The outputs are the sum bit and the carry-out bit produced by the addition of the bits.\/Modulus (MOD) /\Returns the remainder of two values when the first is divided by the second.\/Assembler /\Converts *assembly code* into object code.\/Source Code /\The input into a translator. This code is usually made private by a company due to it's lack of security (ease of copyright infringement)\/Object Code /\The *output of a translator*, in executable machine code. This is usually the code that is distributed due to not requiring an active compiler and the difficulty of reverse engineering.\/Compiler /\Converts *high level language* into object code. Source code is scanned and different checks are performed while *a symbol table is built* based on the information that is given.\/Interpreter /\Converts and analyses a high level language into machine code *line-by-line*.\/Advantages of a Compiler over an Interpreter /\Object Code can be saved and run whenever - it does not need to be recompiled each time. Faster Execution due to symbol table containing all items. Distribution without an active compiler. More secure, difficult to reverse engineer.\/Advantages of an Interpreter over a Compiler /\Source code can be run on any system that has an active interpreter. Code does not need to be recompiled if an error occurs, as error is discovered before full translation.\/Lexical Analysis /\The first stage of a compiler, prepares the code for reading (removes spaces, comments) checks for illegal operators and data types. Lastly, it uses tokens (unique code) from the symbol table to constants, identifiers and keywords to make the code 'tokenised'.\/The Symbol Table /\A hash table that has keywords, constants, variables, operators and more stored under a unique identifier.\/Syntax Analysis /\Determines if the sequence of tokens form a valid instruction. Firstly, the language is given a set of rules. Next, the program is parsed, checked using stacks and reverse polish notation.\/Parsing /\Systematically applying a set of rules to a statement to determine validity.\/Semantic Analysis /\Analyses the *meaning* of different instructions, for example an undeclared value or using the wrong data types.\/Code Optimisation /\An attempt to reduce the run-time of program by removing redundant instructions. It increases compilation time considerably and is not always correct - it should be checked before distributed.\/Linkers /\Connects different object code modules together for when the source code uses sub routines.\/Library Routines /\Built into programming languages, these functions are tested and error free, making them very useful for a programmer wanting to save time and focus on the problem they are tasked to solve.\/Real/Float /\A number with a fractional part\/Primitive Data Type /\Basic Data types, for example Integer, Real, Boolean, Strings etc.\/what happens during the fetch ? /\1. PC copied in MAR 
2. Fetch signal sent across the Control bus and the contents of the MAR Across the address bus 
3. contents of memory location stored in the MAR sent across data bus to the CIR 
4.PC incremented by 1\/what happens during decoding /\1.Contents of the CIR SENT TO CU 
2.Control unit decodes instructions\/what happens during execute /\1. if memory location read from/written to (LDA/STA) then address stored within the instructions will load onto MAR 
2. If STA the data stored in the ACC and sent to memory 
3.in the case of memory it is loaded from memory into the ACC
if a calculation MDR and ACC sent to the ALU and the results sent back to ACC\/what are the differnces between CISC and RISC /\RISC 
 o RISC smaller range of instructions 
 o Smaller instructions = less transistors needed meaning less power and cost less 
o RISC SINGLE clock speed pipelining can be used
o Compilers for RISC more complicated 
o RISC fewer addressing modes 
CISC 
o several clock cycles 
o CISC has a larger instruction set\/what factors effect the performance of the cpu ? /\💵cache
multi core 
pipelining
clock speed\/what is clock speed ? /\It is how many cycles can be completed per second (Hertz)\/what is the effect of the Multiple of cores ? /\Cores will share a higher level of cache\/what are the features of the von neumann architecture? /\o single control unit 
o Works sequentially via instructions 
o Stores instructions and data in the same memory unit\/what is the Harvard architecture? /\In the Harvard architecture the data and instructions are stored in different memory units\/What are the features SIMD? /\Single instructions multiple data 
o same operations carried out on multiple pieties of data at on at a time\/what are the features of MIMD /\multiple instructions multiple data 
o Different instructions carried out concurrently on different pieces of data\/what is an input device ? /\a device that allows data to be input into the system\/what is an output device ? /\A device that allows information to be received from the computer system\/what is the different types of storage /\o magnetic 
o Optical 
o Flash Media\/what are features of magnetic storage /\o magnetisable material
o Patterns of magnetisation used to rep binary sequences 
o Have high capacity and a low cost\/what are the features of flash media /\o Work by using special type of ROM that can be overwritten to 
o Expensive 
o Can read and be written to at high speeds and has no moving parts 
o lower power consumptions and not effected by sudden movements\/what is the features of optical storage? /\o CD and DVD'S
o Work by using laser to identify pits on a surface representing and by looking at its reflection 0 and 1.
o cheap and easy to distribute 
o Fairly resilient\/What is RAM? /\The primary memory that stores the programs and data the system is currently using.
1. Stores the parts of the operating ,programs in the use 
2. is volatile 
3. Can have any location read from or written to at equal speed to any other location\/what is ROM ? /\1. Is non volatile 
2. Read only and written to.
3. Is often used to store the computers boot program\/What does an operating system do? /\o There 3 types of OS 
 - Applications software
 - Utilities software 
 - Systems software\/what are the different forms of Memory management and what is its purpose? /\o Segmentation
o Paging 
Memory management allows data to be stored more efficiently\/What is segementation? /\o where the programs are divided logically into blocks containing modules or routines.\/what is paging /\o Where programs are physically divided into equal sized blocks typically several kilobytes\/what is virtual memory ? /\the use of secondary storage as an extension of a computers physical system\/what are interrupts /\A signal the processor requesting the processors attention at a particular event\/what is ISR in the fetch decode execute cycle? /\o The contents of program counter and other registers 
copied into a stack
o Relevant ISR can be then loaded into by changing the program counter to the value of where ISR starts in memory
o When ISR is complete, the previous values of the program counter and other registers can be restored from memory.
o When the ISR is complete, the previous values of the program counter and other registers can be restored from the CPU\/what is scheduling and what are the 5 types of scheduling? /\o Distributed 
o multitasking 
o Embedded 
o Real time 
o multi user\/What is a distributed OS? /\Allows multiple computers to work on a task together\/what is an embedded OS /\Designed to run on embedded systems rather then general purpose computers. Embedded system is a computer that forms part of a device\/what is a multitasking OS /\can run multiple programs simultaneously\/what is a Real time OS /\Designed to carry out actions within a guaranteed amount of time even when left for long periods of time\/what is BIOS ? /\Basic Input Output System

It is a separate component of the computer which loads the operating system and other necessary modules for the computer into memory\/what are device drivers ? /\A piece of software usually supplied within a device that tells the OS how it can communicate with the device\/what is A Virtual machine ? /\have the same functionality as a physical computer 
o they can run an operating system within another operating system. An advantage of this is they can be backed up and duplicated more than they can be run at one time more than a physical storage\/what is the nature of applications /\Software that allows the user to make something\/What are utilities? /\A very small program that has one purpose often concerned about the maintenance of the system examples include viruses and disk defragmentation\/what is the difference between open and closed software? /\o Open software is free 
o Users are free to amend the code of open software 
o closed source software is often developed by companies with lots of resources and teams of programmers working at the same location
o Open software is developed sometimes by huge teams of volunteers across the world who are not restricted by commercial parts of the project 
o Open source has adva that can help people find security holes but people can exploit it\/what are the different types of translators ? /\o Interpreters 
o compliers 
o Assembler\/what are Interpreters ? /\translator that reads and executes a program line by line.\/what are compliers ? /\A translator that converts high level source code into an executable machine code file\/what are assemblers ? /\A program called an assembler is used to convert each line of assembly code into machine code\/what is the waterfall cycle? /\The waterfall cycle al\/What is agile methodology? /\\/What is XP? /\\/what is the spiral model ? /\an iterative approach; spiral until project completed then deploy; Go-No Go Axis (after analysis there should be a check to see if the project should be continued; feasibility study/check)\/what is rapid application /\\/what is the advantages and disadvantages of the waterfall cycle /\\/what are the advantages of disadvantages of agile methodology /\\/what is the advantages and disadvantages of the spiral model /\\/what is the advantages and disadvantages pf rapid application /\\/what is the purpose of high level languages /\\/what is the purpose of low level langauges /\\/what are procedrual programming languages and give examples /\\/what is assembley code and what are the instructions /\\/what is lossy and lossless compression? /\\/what are relational databases ? /\\/what is a flat file /\\/what is q foreign key /\\/what ia a secondary key /\\/what is are the entity relationship digarams /\\/what is hashing /\\/what is a fixed field /\\/what is a variable field /\\/what is the purpose of a network /\\/why are protocols and standards /\\/why are protocols and standards important /\\/what is a bus topology /\\/what is a ring topology /\\/what is a star topology /\\/what are the features of a LAN network /\\/what are the features of a WAN network /\\/what are the features of a SANwork /\\/what are the features of a MAN network /\\/what are the features of a PANnetwork /\\/What is DNS? /\\/what layers can be found in layering /\\/what is the purpose of layering /\\/what is the OSI /\\/state the layers of the osi /\\/what is the TCP IP stack /\\/what are the layers of the TCP IP stack /\\/what are the features of circuit switching /\\/what are the steps for set circuit switching /\\/what does packet switching do /\\/what items are found in packet switching /\\/what is HTML and look at the programming 4 it /\\/ /\\/What is CSS used for? /\\/what is JavaScript and look at the programming for a /\\/what are the different data types /\\/convert 1 1000001 into denary /\\/convert 140 into an 8-bit binary /\\/convert -72 into 8-bit to complement binary value /\\/convert 92 in to hexadecimal /\\/convert 92 into hexadecimal /\\/what is twos complement /\\/what is sign and magnitude /\\/what are the approaches for ASCII /\\/Calculate 10011+1011 /\\/calculate 11010 -100 /\\/what is an overflow /\\/what is an underflow /\\/using an 8 bit floating point number and a 5 bit mantissa and a 3 bit exponent in twos complement form convert 10110 010 /\\/using a 10 bit mantissa and a 6 point exponent /\\/how do you normalise a floating point numbers /\\/what are arrays /\\/what are the features of a record /\\/what are the features of list /\\/what are the features of a tuple /\\/what are the features of a stack /\\/what is the algorithm for a stack /\\/what are the features of a queue /\\/what is the algorithm for a queue /\\/what is the computer misuse Act /\\/what are the ways to reduce the threats of Computer Misuse /\\/what is the data protection act 1998 /\\/What are the 8 principles? /\\/what is CPDA? 1988 /\\/what are features of the RIPA act 2000 /\\/what are the opportunities and risk of computers in the workplace /\\/what are the factors of automated decision making /\\/what are the opportunities and risk of environmental issues /\\/what are the opportunities and risk of censorship and the internet /\\/what are the opportunities and risk of AI /\\/what are the opportunities and risk of monitoring behaviour /\\/Finite State Machine /\abstract model of computation used to design computer programs and sequential logic circuits\/Finite State Machines represent /\how something changes from one state to another in response to a condition or event\/finite state machines can be used for /\language recognition\/mealy machine /\type of FSM that generates an output on each state transition\/the output of a mealy machine is determined by /\its current state and current input\/in a mealy machine for each combination of state and input /\only a single transition can be assigned\/notation for mealy machine /\input/output\/uses of mealy machines /\language parsing, language translation\/state transition table /\used to define a mealy machine, shows all the possible states for all the possible inputs and output combination\/use sets because it /\formalises the ideas of grouping objects together and viewing them together as a single entity\/set /\a well defined collection of objects\/objects in a set /\member or elements, and each member may only occur once\/sets are /\unordered\/set is dontaed with a .............. and a memeber is denoted by a........ /\upper case letter, lower case letter\/when defining a set by /\listing all the members, must be enclosed by {}\/set can also be defined by set comprehension /\stating the properties held by the memebers\/set of natural numbers /\1,2,3,4\/set of positive integers /\1,2,3,4\/Set of all integers /\-2,-1,0,1,2\/set of rational numbers /\p/q\/set of real numbers /\\/set membership: x£S /\x is a member of set S\/In Sets: | (pipe)means /\such that\/in Sets: ^ means /\and\/compact representation of: {x|x £ N ^ is even} /\{x£N | x is even}\/set operatiosn /\union, intersection, difference\/union e.g. AUB /\OR\/intersection e.g. ANB /\AND\/Difference /\NOT\/A is a subset of B when /\every member of A is also a member of B\/A is NOT a subset of B if /\at least one member of A is NOT a member of B\/A is a proper subset of B when /\A is a subset of B, but A does NOT equal B\/cartesu
ian product of x2 stets is the /\set of all ordered pairs ???\/A X B /\{(a,b) | a£A ^ b£B}\/A={1,2} B={4,8} A X B= /\{(1,4),(1,8),(2,4),(2,8)}\/Cardinality /\number of elements in a finite set, denoted as |A|\/finite set /\contains an exact number of distinct memebers e.g. alphabet\/infinite set /\contains an infinite number of distinct member e.g. naturals or reals\/countably infinite set /\one whose members can be counted using an infinite set N e.g int is , but reals are not (continuous and not?)\/a set is countable if /\it can be paired off using natural numbers\/regular expressions /\patterns used to specify a set of strings (simple way of defining a set)\/regular expression are used for /\finding particular words in a stream, defining a set of acceptable strings in a langugae\/regular expression do not work with /\wild cards (would NOT accept d*g: dog, dig, dug)\/Regular Expression: | (pipe) means /\Or\/Regular Expression: * means /\0 or more (of the preceding element)\/Regular Expression: + means /\1 or more (of the preceding element)\/Regular Expression: ? means /\zero or one (of the preceding element)\/Regular Expression: ( ) means /\identifies groups\/in RegEx member side by side must appear /\in that sequence\/ab+ = (ab)+ (True or false) /\False\/{b, ab, aab, aaab....} /\a*b\/{b, ab, ba, baaa} /\(a?b) | (ba*)\/regular expression can be represented using /\FSM\/RegEx FSM spinning in the rejection state /\takes care of all possible entries that it doesn't accept\/ways of describing regular Languages /\set notation, regular expressions, finite state machinces\/Backus-Naur Form /\formal notation used to describe syntax rules of a language (language that describes a language)\/why use BNF /\to express language that cannot be expressed by regular expression\/regular languages can be represented by regular expression BUT /\some languages are not regular to require BNF\/Context-free language /\defined using BNF\/it would be possible (but time consuming) to represent context free using /\regEx but it cant define everything e.g. nested brackets\/BNF: ::= means /\is defined as\/BNF: | means /\Or\/BNF: <> means /\surrounds category name\/BNF: terminal symbols /\cannot be further broken down e.g. letters or didgits\/BNF: Non-terminal symbols /\can be further broken down e.g. postcode\/an instruction from a computer must NOT be /\ambiguous\/BNF can be used by compilers to /\write and represent precises syntax for a programming language (used to set up machine code syntax)\/recursive production rules /\when the rule is defined in terms of itself\/using recursion in BNF allows a set of production rules to be /\concise while allowing an infinite number of items to be precisely defined (dont have to use + or *)\/parsing /\the act of checking an input string against a set of BNF rules to see if it's valid\/when a compiler or interpreter encounters an input it /\validates the input by building a tree according to the BNF rules\/syntax diagram definition /\another way of representing a context free language by using graphical equivalent to BNF\/terminal symbol /\\/non terminal symbol /\\/non terminal element that may be used more than once (reccursive) /\\/reverse polish notation RPN /\a mathematical notation in which every operator follows all of its operands\/infix /\operator come between the operands (normal maths)\/prefix /\operators come before the opernads\/postfix /\operators come after the operand\/Reverse polsih was devised as a way to to maths without /\brackets\/postfix is /\reverse polish\/use reverse polish because it /\eliminates brackets, keeps order of execution in unambiguous and easier to evaluate than infix\/order of precedence in Reverse Polish Notation (starting with high precedence) /\~ ^ * / + - (negative number, exponent, multiplication and division, add and subtract)\/translation (infix to postfix) by Numbering:
Starting from the ..........., once enough operands have been numbered for their to be an operator used (require 2 operands for every operator) .............. /\left number the operand - number the operator\/translation (infix to postfix) by Bracketing:
add.... to make the ............ explicit, .............inside each set of brackets ...........position, but still inside the brackets, then............... /\brackets - order of precedence- move the operator - to the end - remove all brackets\/translation (infix to postfix) by Binary Tree:
build a binary tree from the infix expression, where the root become the ............................, choosing the operator with the................ first. then traversing it using a .............traversal algorithm /\operator and the leaves the operands - highest precedence- post order\/methods for translating RPN to infix /\scanning (just see it) bracketing\/RPN evaluation uses a /\stack algorithm to produce the result\/using a stack to evaluate RPN: 
if its an operand ................ if its an operator ......................... off the stack and perform the operation then .............................. /\push it onto the stack- pop the required number of operators - push the result back onto the stack\/when popping operands from a stack /\pop right operand first then left\/Turing Machine /\a theoretical machine (rather than a physical one) that can carry out any computer algorithm\/turing machines can be viewed as a computer with a /\single fixed program\/truing machines are expressed using /\finite set of states, finite set of symbols, infinite tape(memory), read/write head that can travel along the tape\/x2 parts of the turing machine /\tape (with square marked off that can be read and written to) an controller (program) which determined what happens at each cell\/a Turing machine must have at least 2 states: /\starting state and a halting\/the controller of a Turing machines is state /\finite state machine which tells the turing machine what to do next\/in any one transition the machine can /\(input) read a symbol, (output)erase/write a symbol, and move the head to the right or left buy a single cell\/transition function (turing machine) /\way to represent the transition arc between x2 states on a state transition diagram\/lower case delta means /\small change, used to represent each transition on a transition diagram\/format of transition function /\(current state, input symbol) = (next state, output symbol, head move)\/importance of Turing machine /\provides a definition of what is computable\/universal Turing machine /\combines all the possible single Turing machine into one, so that it ca perform every operation\/Universal Turing Machine /\\/stored program concept /\computer which stores both program and data in a single memory\/Finite State Machine /\abstract model of computation used to design computer programs and sequential logic circuits\/Finite State Machines represent /\how something changes from one state to another in response to a condition or event\/finite state machines can be used for /\language recognition\/mealy machine /\type of FSM that generates an output on each state transition\/the output of a mealy machine is determined by /\its current state and current input\/in a mealy machine for each combination of state and input /\only a single transition can be assigned\/notation for mealy machine /\input/output\/uses of mealy machines /\language parsing, language translation\/state transition table /\used to define a mealy machine, shows all the possible states for all the possible inputs and output combination\/use sets because it /\formalises the ideas of grouping objects together and viewing them together as a single entity\/set /\a well defined collection of objects\/objects in a set /\member or elements, and each member may only occur once\/sets are /\unordered\/set is dontaed with a .............. and a memeber is denoted by a........ /\upper case letter, lower case letter\/when defining a set by /\listing all the members, must be enclosed by {}\/set can also be defined by set comprehension /\stating the properties held by the memebers\/set of natural numbers /\1,2,3,4\/set of positive integers /\1,2,3,4\/Set of all integers /\-2,-1,0,1,2\/set of rational numbers /\p/q\/set of real numbers /\\/set membership: x£S /\x is a member of set S\/In Sets: | (pipe)means /\such that\/in Sets: ^ means /\and\/compact representation of: {x|x £ N ^ is even} /\{x£N | x is even}\/set operatiosn /\union, intersection, difference\/union e.g. AUB /\OR\/intersection e.g. ANB /\AND\/Difference /\NOT\/A is a subset of B when /\every member of A is also a member of B\/A is NOT a subset of B if /\at least one member of A is NOT a member of B\/A is a proper subset of B when /\A is a subset of B, but A does NOT equal B\/cartesu
ian product of x2 stets is the /\set of all ordered pairs ???\/A X B /\{(a,b) | a£A ^ b£B}\/A={1,2} B={4,8} A X B= /\{(1,4),(1,8),(2,4),(2,8)}\/Cardinality /\number of elements in a finite set, denoted as |A|\/finite set /\contains an exact number of distinct memebers e.g. alphabet\/infinite set /\contains an infinite number of distinct member e.g. naturals or reals\/countably infinite set /\one whose members can be counted using an infinite set N e.g int is , but reals are not (continuous and not?)\/a set is countable if /\it can be paired off using natural numbers\/regular expressions /\patterns used to specify a set of strings (simple way of defining a set)\/regular expression are used for /\finding particular words in a stream, defining a set of acceptable strings in a langugae\/regular expression do not work with /\wild cards (would NOT accept d*g: dog, dig, dug)\/Regular Expression: | (pipe) means /\Or\/Regular Expression: * means /\0 or more (of the preceding element)\/Regular Expression: + means /\1 or more (of the preceding element)\/Regular Expression: ? means /\zero or one (of the preceding element)\/Regular Expression: ( ) means /\identifies groups\/in RegEx member side by side must appear /\in that sequence\/ab+ = (ab)+ (True or false) /\False\/{b, ab, aab, aaab....} /\a*b\/{b, ab, ba, baaa} /\(a?b) | (ba*)\/regular expression can be represented using /\FSM\/RegEx FSM spinning in the rejection state /\takes care of all possible entries that it doesn't accept\/ways of describing regular Languages /\set notation, regular expressions, finite state machinces\/Backus-Naur Form /\formal notation used to describe syntax rules of a language (language that describes a language)\/why use BNF /\to express language that cannot be expressed by regular expression\/regular languages can be represented by regular expression BUT /\some languages are not regular to require BNF\/Context-free language /\defined using BNF\/it would be possible (but time consuming) to represent context free using /\regEx but it cant define everything e.g. nested brackets\/BNF: ::= means /\is defined as\/BNF: | means /\Or\/BNF: <> means /\surrounds category name\/BNF: terminal symbols /\cannot be further broken down e.g. letters or didgits\/BNF: Non-terminal symbols /\can be further broken down e.g. postcode\/an instruction from a computer must NOT be /\ambiguous\/BNF can be used by compilers to /\write and represent precises syntax for a programming language (used to set up machine code syntax)\/recursive production rules /\when the rule is defined in terms of itself\/using recursion in BNF allows a set of production rules to be /\concise while allowing an infinite number of items to be precisely defined (dont have to use + or *)\/parsing /\the act of checking an input string against a set of BNF rules to see if it's valid\/when a compiler or interpreter encounters an input it /\validates the input by building a tree according to the BNF rules\/syntax diagram definition /\another way of representing a context free language by using graphical equivalent to BNF\/terminal symbol /\\/non terminal symbol /\\/non terminal element that may be used more than once (reccursive) /\\/reverse polish notation RPN /\a mathematical notation in which every operator follows all of its operands\/infix /\operator come between the operands (normal maths)\/prefix /\operators come before the opernads\/postfix /\operators come after the operand\/Reverse polsih was devised as a way to to maths without /\brackets\/postfix is /\reverse polish\/use reverse polish because it /\eliminates brackets, keeps order of execution in unambiguous and easier to evaluate than infix\/order of precedence in Reverse Polish Notation (starting with high precedence) /\~ ^ * / + - (negative number, exponent, multiplication and division, add and subtract)\/translation (infix to postfix) by Numbering:
Starting from the ..........., once enough operands have been numbered for their to be an operator used (require 2 operands for every operator) .............. /\left number the operand - number the operator\/translation (infix to postfix) by Bracketing:
add.... to make the ............ explicit, .............inside each set of brackets ...........position, but still inside the brackets, then............... /\brackets - order of precedence- move the operator - to the end - remove all brackets\/translation (infix to postfix) by Binary Tree:
build a binary tree from the infix expression, where the root become the ............................, choosing the operator with the................ first. then traversing it using a .............traversal algorithm /\operator and the leaves the operands - highest precedence- post order\/methods for translating RPN to infix /\scanning (just see it) bracketing\/RPN evaluation uses a /\stack algorithm to produce the result\/using a stack to evaluate RPN: 
if its an operand ................ if its an operator ......................... off the stack and perform the operation then .............................. /\push it onto the stack- pop the required number of operators - push the result back onto the stack\/when popping operands from a stack /\pop right operand first then left\/Turing Machine /\a theoretical machine (rather than a physical one) that can carry out any computer algorithm\/turing machines can be viewed as a computer with a /\single fixed program\/truing machines are expressed using /\finite set of states, finite set of symbols, infinite tape(memory), read/write head that can travel along the tape\/x2 parts of the turing machine /\tape (with square marked off that can be read and written to) an controller (program) which determined what happens at each cell\/a Turing machine must have at least 2 states: /\starting state and a halting\/the controller of a Turing machines is state /\finite state machine which tells the turing machine what to do next\/in any one transition the machine can /\(input) read a symbol, (output)erase/write a symbol, and move the head to the right or left buy a single cell\/transition function (turing machine) /\way to represent the transition arc between x2 states on a state transition diagram\/lower case delta means /\small change, used to represent each transition on a transition diagram\/format of transition function /\(current state, input symbol) = (next state, output symbol, head move)\/importance of Turing machine /\provides a definition of what is computable\/universal Turing machine /\combines all the possible single Turing machine into one, so that it ca perform every operation\/Universal Turing Machine /\\/stored program concept /\computer which stores both program and data in a single memory\/Abstraction /\Is the process of seperating ideas from reality to create a repersentation of reality. It means hiding innecessary detail appropriate to solve the probelm at hand\/Concatenate /\the '+' is used to join two strings together\/Input /\This is any hardware device that can send data to a computer\/Output /\This is any device used to send data from the computer to another device\/Storage /\A piece of computer equipment on which information can be stored\/Vairable /\names in location of memory, where you can store data\/String /\any letter or numbers\/Interger /\any whole numbers that you can use in python\/Invalid syntax /\A program that does not follow the rules of the program\/The arithmetic Logic Unit
(ALU) /\Arithmetic things so it adds binary numbers together and minus binary numbers from each other. It also does logic, so it can compare two number together and compare a binary number with Zero.\/Control unit (CU) /\sends signals to co-ordinate how the processor works, controls how data moves around parts of the CPU, and how it moves between the CPU and memory.\/registers /\Are memory locations in the processor itself, they work at very fast speeds and are used to control the fetch, decode and execute cycle.\/PC (program counter) /\It stores the address of the next instruction\/MAR (memory address register) /\It stores the address of the data or the instructions that are to be fetched from, or sent to the memory\/Address bus /\It carries the address of the memory location being read It carries the address of the memory location being read from or written to.\/Data bus /\It moves data and instruction between system components. The width of the data bus is 8 bits wide.\/Control bus /\This is where the signals can be carried both ways. This is to insure that the data and address bus doesnt lead to conflict\/Buses /\Are sets of wires connecting the processor to the main memory and peripheral.\/Cache /\Principle of storing data/instructions that are likely to be needed in the future, in system memory, so that they can be qucikly accesssed\/Modules /\Compartmentalising code, often so that it can be resued when required\/Constant /\Something that cannot be changed when a programm is running\/Decompisistion /\Breaking down a probelm into small modules. Where different people work on them and bring the answers together to solve the problem.\/Step by requirement /\Breaking down the problem even more, so that it cant be broken down more.\/Parameter /\A parameter is a special kind of variable, used in a subroutine to refer to one of the pieces of data provided as input to the subroutine. These pieces of data are called arguments. 
When a parameter is passed to a function, only a copy of the data passed may be changed, therefore no unforeseen effects will occur in other modules. This is the case only if passed by value\/Algorithm /\Defined set of steps that can be used to complete a task\/Function /\A subroutine that executes its statements and then reutrns a value back into the main program\/Array /\A data structure made up of a series of vairables of all of the same type, grouped under one identifier. Elements are accessed using an index\/Procedure /\A subroutine that simply executes its statements.It does not return a value\/Interrupt /\This is a signal sent to the CPU to attempt to obtain processor times. It is stored in the interrupt register\/Random Access Memory (RAM) /\This is non-volatile memory meaning that data does not remain in the memory without a power source\/Read Only Memory (ROM) /\This is volatile memory meaning it retains data without a power source.\/Processor Clock /\A timing device connected to the processor that synchronises when the fetch decode execute cycle runs\/Clock speed /\The number of cycles that are performed by the CPU per second\/Multiple cores /\Usually describes two or more CPU's working together on the same chip\/Parallel processing system /\When multiple processors work together to solve a problem\/Reduced instruction set computing (RISC) /\designed to perform a smaller number of types of computer instructions so that it can operate a higher speed. Instructions execute in a single clock cycle, which allows pipelining\/Complex instruction set computing (CISC) /\Single instructions can execute several low-level operations\/Multi-tasking operating system /\With one processor, programs are executed so each receive a short amount of time to be executed. Giving us the impression they are running simultaneously\/Multi-user operating system /\Multiple users can use the same computer at one time, managing each users preferences\/Distributed systems /\You can combine the processing power of multiple computer for a single task across a network\/Embedded systems /\These system are hardware specific, meaning they run with maximum efficiency and low powered processors\/Real-time system /\These system are guaranteed to be executed within a certain time frame\/Paging /\This is dividing up the memory into equal sizes. Does not take into account the code that is currently executing as you could be splitting up a loop\/Segmentation /\This is diving up the memory into logical sizes, uses virtual memory to move data around the memory. Disk thrashing can occur here.\/Identifier /\This is whatever is put after the 'def' in the procedures\/Global variable /\One which is defined in the main program\/Local Variable /\One which is defined in the procedure/function\/Arguement /\This is whatever you have in the brackets of your procedure, the value that passes through the parameter\/Passing by value /\This means if you change variables data it will not affect the original data that you have\/Passing byreference /\This means that you have control over the variables data directly, so any changes will be permanent.\/Iterative /\This is code that can be repeated e.g. loops\/Procedural thinking /\Viewing soultions to a probelm as a sequence of instructions and breaking them down in to subroutines which could be called upon at appropriate times\/Decomposistion /\The skill in breaking down a complex problem into simpler sub problem so that the problem can be more easily solved\/Sub routine /\A set of instructions which when called by the main program performs a specific task\/Statement /\A statement is a single instruction or step within a program. usually in one line of code\/sequence /\A control strucute in which a set of instructions is each executed once, in the order in which they are written\/Selection /\A control structure in which an option of statements is provided and a condition is used to decide which statements should be executed.\/Iteration /\A control structre in which a group of stements is executed repeatedly. Also knows as a loop or repetition.\/Mantissa /\The part of floating point number which repersents the significant digits of that number\/Exponent /\The power to which the number in mantissa has to be raised (power)\/Static data structure /\Is one that does not change in size while the program is running\/Dynamic data structre /\This is one that can change in size while the program is running\/computer system /\Hardware, software, and data working together.\/embedded systems /\Special-purpose software designed and included inside physical products\/CPU /\Central Processing Unit, the brain of the computer.\/control unit (CU) /\Component of a processor that directs and coordinates most of the operations in the computer.\/Arithmetic Logic Unit (ALU) /\the part of the CPU that performs arithmetic computations and logical operations.\/cache memory /\a type of high-speed memory that a processor can access more rapidly than main memory\/Von Neumann Architecture /\A processor where data and instructions are stored in the same memory and accessed via buses.\/Program Counter (PC) /\A register that holds the address of the next instruction to be fetched in the fetch execute cycle.\/Accumulator (ACC) /\A storage register in the ALU that holds data temporarily while the data is processed and before it is transferred to memory.\/Memory Address Register (MAR) /\Holds the address in memory of the instruction at present being executed.\/Memory Data Register (MDR) /\contains the data value being fetched or stored\/memory /\holds the program instructions and the program data\/FDE Cycle /\Fetching an instruction from memory, decoding what the machine code means, then running the instruction with the result stored in the accumulator\/Random Access Memory (RAM) /\Computer location where instructions and data are stored on a temporary basis. This memory is volatile.\/Virtual Memory /\a portion of a storage medium functioning as additional RAM\/read-only memory (ROM) /\the portion of a computer's primary storage that does not lose its contents when one switches off the power. This memory is non-volatile\/volatile memory /\Storage that is wiped clean when power is cut off from a device\/non-volatile memory /\Memory that can retain the stored data even when not powered\/clock speed /\The speed, or frequency, expressed in MHz, that controls activity on the motherboard and is generated by a crystal or oscillator located somewhere on the motherboard.\/Number of Cores /\The number of duplicate processors linked together on a single chip\/Graphics Processing Unit (GPU) /\A set of processors on a video card in a computer performing data parallel calculations to render objects (windows, etc.) on screen.\/Primary Storage /\Temporary storage on the motherboard used by the CPU to process data and instructions. Memory is considered primary storage.\/Secondary Storage /\Storage that is remote to the CPU and permanently holds data, even when the PC is turned off, such as a hard drive.\/Tertiary Storage /\High-capacity external storage used mainly for back ups.\/Hard Disk Drives (HDD) /\the traditional internal storage in PCs and Laptops. A magnetised metal disk spins at around 5400-15000 rpm\/Solid State Drive (SSD) /\A storage device that uses the same kind of memory that flash drives use but that can reach data in only a tenth of the time a flash drive requires. There are no moving parts\/flash memory /\Type of non-volatile memory that can be erased electronically and rewritten.\/Optical disc /\Type of storage medium that consists of a flat, round, portable disc made of metal, plastic, and lacquer that is written and read by a laser.\/magnetic tape /\made of a plastic material, resembles a cassette tape and stores data sequentially. Normally used for archiving\/Systems software /\A group of programs that coordinate and control the resources and operations of a computer system.\/Operating System (OS) /\System software that provides an interface between the user or application program and the computer hardware.\/Device Drivers /\Utility software used by the operating system to communicate with peripheral devices.\/User Interface (UI) /\controls how you enter data and instructions and how information is displayed on the screen\/Graphical User Interface (GUI) /\A visual display on a computer's screen that allows you to interact with your computer more easily by clicking graphical elements.\/OS Functions /\-backup & recovery
-user interface
-start/stop programs
-read & write data
-allocate main memory
-memory swapping\/Utility Software /\systems software that perform tasks related to managing the computer's resources, file management, diagnostics, and other specialised chores\/Defragmentation /\A utility that reduces the amount of fragmentation by physically organising the contents of the disk to store the pieces of each file contiguously.\/backup /\A copy of data that is made in case the original data is lost or damaged. The backup can be used to restore the original data.\/full backup /\Backup that copies all data from a system.\/incremental backup /\A type of partial backup that involves copying only the data items that have changed since the last partial backup. This produces a set of incremental backup files, each containing the results of one day's transactions\/Compression software /\Reduces the size of files so they take up less disk space\/Encryption software /\software that scrambles data into a secret code that can only be broken by complicated mathematical algorithms\/Open Source Software (OSS) /\Software that is free and where anyone can look at and potentially modify the code.\/proprietary software /\Software that has been developed by a company and has restrictions on its use, copying, and modification.\/Local Area Network (LAN) /\Connects a group of computers in close proximity, such as in an office building, school, or home\/Wide Area Network (WAN) /\A network that connects devices in geographically separated areas.\/Bandwidth /\The amount of data that can be transmitted over a network in a given amount of time.\/Wired Cable /\Traditional cable delivered through wires to houses, which is faster and more reliable than wireless\/fibre optic cable /\Cable that carries data transmitted as light.\/Wireless /\a form of computer networking or other communication that uses radio signals and microwaves to transmit data\/Network Interface Controller (NIC) /\An internal piece of hardware that allows a device to connect to a network\/Ethernet Cable /\cable that connects computers to the LAN that allows the computers to communicate with each other and other peripherals.\/coaxial cable /\insulated copper wire; used to carry high-speed data traffic and television signals\/Wireless Access Point (WAP) /\gives wireless devices a sending and receiving connection point to the network\/Hotspots /\designated locations where Wi-Fi access points are publicly available\/Dongle /\a small device able to be connected to and used with a computer, especially to allow access to wireless broadband or use of protected software.\/Wi-Fi /\Wireless local area network that uses radio signals to transmit data. It uses 2 radio frequency bands - 2.4 GHz and 5 GHz\/client-server network /\A network that uses centrally administered computers, known as servers, to enable resource sharing for and to facilitate communication between the other computers on the network.\/peer-to-peer network (P2P) /\A computer network that relies on the computing power and bandwidth of the participants in the network rather than a centralised server\/bus /\The paths, or lines, on the motherboard on which data, instructions, and electrical power move from component to component.\/Star Topology /\A topology with one central computer that has each computer or network device attached to the central computer. All data first goes into the central computer and then is sent out to its destination\/Bus Topology /\A LAN configuration in which all nodes share a common line\/Ring Topology /\no host computer is required because each computer manages its own connectivity\/Mesh Topology /\every computer connects to every other computer. No central connecting device is needed\/Network Protocols /\The software defining the rules and formats a computer must use when sending information across the network.\/MAC address /\Unique address embedded in network connected devices.\/IP address /\A number assigned to any item that is connected to the Internet.\/data packet /\A unit of data transfer between computers that communicate on a network.\/Packet Switching /\Occurs when the sending computer divides a message into a number of efficiently sized units called packets, each of which contains the address of the destination computer\/TCP/IP /\The dominant set of protocols for the transfer of data over the Internet.\/HTTP (Hypertext Transfer Protocol) /\the protocol used for transmitting web pages over the Internet\/HTTPS (Hypertext Transfer Protocol Secure) /\A more secure version of HTTP. Encrypts all information sent and received.\/FTP (File Transfer Protocol) /\A protocol used to move files and folders over a network or the Internet.\/POP3 (Post Office Protocol version 3) /\A protocol used from retrieving email from a mailbox on the mail server.\/IMAP (Internet Message Access Protocol) /\a common protocol for retrieving email messages via the Internet\/SMTP (Simple Mail Transfer Protocol) /\A communications protocol that enables sending email from a client to a server or between servers.\/Layer 1 - Data Link Layer /\Passing data over the physical network; responsible for how bits are sent as electrical signals over cables, wireless and other hardware (Ethernet)\/Layer 2 - Network Layer /\Making connections between networks, directing data packets and handling traffic. Used by routers\/Layer 3 - Transport Layer /\Controlling data flow (e.g. splitting data into packets and checking packets are correctly sent + delivered, TCP)\/Layer 4 - Application Layer /\Turning data into websites and other applications and vice-versa (HTTP, FTP, SMTP)\/Layer /\a group of protocols which have similar functions\/The internet /\A global network connecting millions of computers, making it possible to exchange information.\/Domain Name System (DNS) /\Internet service that translates domain names into IP addresses.\/Cloud /\use of web services to perform functions that were traditionally performed with software on an individual computer; i.e. Google Drive.\/Virtual Network /\A software-based network that exists between devices on a physical network.\/Virtual Private Network (VPN) /\A private data network that creates secure connections, or "tunnels," over regular Internet lines\/Passive Attack /\Attack where the attacker does not interact with processing or communication activities, but only carries out observation and data collection, as in network sniffing.\/Active Attack /\A network attack where the hacker attempts to change data or introduce malware\/Insider Attack /\Someone within an organisation exploits their network access to steal information\/brute force attack /\An attack on passwords or encryption that tries every possible password or encryption key.\/DoS attack (Denial of Service attack) /\A network attack in which an attacker disables systems that provide network services by consuming a network link's available bandwidth, consuming a single system's available resources, or exploiting programming flaws in an application or
operating system.\/Malware /\software that is intended to damage or disable computers and computer systems.\/Viruses /\these attach themselves to certain files. Users spread themselves by copying infected files and activate them by opening infected files\/Worms /\Independent computer programs that copy themselves from one computer to other computers over a network\/Trojans /\Malware that appears to perform a desirable function for the user prior to run or install but instead facilitates unauthorised access of the user's computer system.\/Social Engineering /\hackers use their social skills to trick people into revealing access credentials or other valuable information\/Phishing /\a technique to gain personal information for the purpose of identity theft, usually by means of fraudulent e-mail\/SQL (Structured Query Language) /\an international standard language for processing a database\/SQL Injection /\An attack that targets SQL servers by injecting commands to be manipulated by the database.\/Penetration Testing /\when an organisation employ specialists to simulate a potential attack.\/Network Forensics /\Investigations that organisations undertake to find the cause of attacks on their network\/Passwords /\private phrases or words that give a particular user a unique access to a particular program or network\/User Access Levels /\A network policy that defines which users can see which folders and files and the type of access they have to them. Eg: Read-Only or Read-Write.\/Anti-malware software /\Software designed to stop malware from damaging a computer or network\/Firewall /\Part of a computer system that is designed to block unauthorised access\/Encryption /\a process of encoding messages to keep them secret, so only "authorised" personnel can read it.\/Ethical Issues /\Points of concern about what is morally right\/Legal Issues /\Factors that have been made into laws by the government.\/Cultural Issues /\Factors that have an impact on the ways in which we function as a society.\/environmental issues /\Factors that can impact the natural world\/Stakeholders /\any persons or groups who will be affected by an action\/Internet Censorship /\government attempts to control internet traffic, thus preventing some material from being viewed by a country's citizens (N. Korea, China, Cuba etc)\/computer surveillance /\When someone monitors what other people are accessing on the internet\/ISP (Internet Service Provider) /\A company that provides customers access to the Internet.\/Cyberbullying /\Bullying using technology, such as computers and mobile phones.\/Health problems /\-Eyestrain
-RSI (repetitive strain injury)
-back problems\/viral /\media which has been rapidly spread and has soared in popularity\/digital divide /\A worldwide gap giving advantage to those with access to technology\/virtual server /\A remote software tool that can run its own operating systems or applications, similar to a physical server.\/e-waste /\discarded electronic equipment such as computers, smart phones, televisions, etc.\/Data Protection Act of 1998 /\This law regulates how personal information is used and protects against misuse of personal details.\/Freedom of Information Act of 2000 /\Gives all citizens the right to inspect all records of federal agencies except those containing military, intelligence, or trade secrets; increases accountability of bureaucracy\/Computer Misuse Act of 1990 /\This law restricts people from accessing or modifying data without permission\/Copyright, Designs and Patents Act of 1988 /\An act, which amongst other things, makes it an offence to be caught copying or stealing software.\/Copyright /\a document granting exclusive right to publish and sell literary or musical or artistic work\/Patents /\exclusive rights to make or sell inventions\/Creative Commons (CC) /\A kind of copyright that makes it easier for people to copy, share, and build on your creative work, as long as they give you credit for it.\/Baud Rate/\The maximum possible number of signal changes that can occur in a wire per second.\/Bit Rate/\The number of bits that can be sent down a wire per second.\/Integer/\A whole number that can be positive, negative or zero.

Examples: -3, 0, 7, 2013588.\/Natural (Number)/\A whole number that is either positive or zero.


Examples: 0, 1, 2, 100, 67238.\/Rational (Number)/\Any number that can be represented as the fraction 'a/b' where 'a' and 'b' are both integers.

Examples: -0.2, 4/5, 1, 1/3.\/Irrational (Number)/\Any number that cannot be represented as a fraction.

Examples: square root of 2, PI.\/Real (Number)/\Any number that can either be rational or irrational.\/Boolean/\A value that is either true or false.\/String/\A series of characters.\/Array/\A variable that can store multiple values of the same data type.

Example: Storing the high-scores of a game as integers.\/Record/\A variable that can store multiple values that can have different data types.

Example: Storing data about a book; a string for the title, an integer for the number of pages, etc.\/Variable/\A metaphor for it is that is a box that can store a specific type of item (the data type) and has a name assigned to it (the identifier). Its value can be changed during run-time of the program.\/Constant/\A metaphor for it is that is a box that can store a specific type of item (the data type) and has a name assigned to it (the identifier). Its value cannot be changed during run-time of the program.\/Subroutine/\This can be broken down into procedures and functions.\/Procedure/\A block of code that performs a specific task that does not return a value. Parameters can be passed into it.\/Function/\A block of code that performs a specific task that returns a value. Parameters can be passed into it.\/Selection/\This is when an if statement or select case is used to, for example, check the value of a variable.\/Iteration/\This is when, within the program, there is a loop.\/Definite Iteration/\The number of times that the program will loop is already specified.

Example: For loop.\/Indefinite Iteration/\The number of times the program will loop is unknown.

Example: Do loop.\/Nested (structures)/\This is when either iterative or selective statements are put inside of each other.\/Meaningful Identifiers/\Subroutines, variables and objects should have sensible names.\/Real Division/\Finds the value (usually as a decimal) of one number divided by another.\/Integer Division/\Finds the integer part of one number divided by another.\/Integer Remainder/\Finds the remainder of one number divided by another.\/Truncation/\Chops the decimal part off a number.\/Floor/\Rounds a number down to the nearest integer.\/Ceiling/\Rounds a number up to the nearest integer.\/AND/\Logical Operation:
Returns true only when both values are true.\/OR/\Logical Operation:
Returns true as long as at least one of the values are true.\/XOR/\Logical Operation:
Returns true only when exactly one of the two values is true and not both.\/NOT/\Logical Operation:
Returns true if the value is false and returns false if the value is true.\/Exception Handling/\When a try catch is used in the program to deal with any errors that may occur.\/ByVal/\When a variable is passed into a subroutine as a copy so its value will not be changed.\/ByRef/\When a variable is passed into a subroutine as a reference so its value can be changed.\/Local (Variable)/\A variable that is defined, for example, within a subroutine and cannot be viewed or modified from outside of the block of code is was declared in.\/Global (Variable)/\A variable that is declared, usually at the start of the program, and can be accessed and modified from anywhere at all in the program.\/Recursion/\A subroutine's definition contains a self-call meaning a function or procedure calls itself as a way of performing iteration.\/Object-Oriented (Programming)/\A type of programming paradigm when multiple objects are created and handled to run the program.

Example: In a game you might have an object for the player and then multiple objects for the enemies.\/Procedural (Programming)/\A type of programming paradigm when you break down a project, usually using a decomposition diagram, into individual tasks which can each be performed by a procedure.\/Functional (Programming)/\A type of programming paradigm that is mainly used for calculations. No variables are declared, only functions are used with parameters and return statements.\/(Object) Instantiation/\When an object is first created using the 'new' keyword.\/(Object) Constructor/\A procedure that is called once when an object is created, parameters can be passed into this procedure.\/(Object) Destructor/\A procedure that is called once when an object is destroyed, parameters cannot be passed into this procedure.\/Methods/\The subroutines that make up an object.\/Attributes/\Non-local variables that make up the object.\/Public/\The scope of a variable when it can be accessed from anywhere within the program or by any linked outside program.\/Friend/\The scope of a variable when it can be accessed from anywhere within the program but not from outside.\/Private/\The scope of a variable when it can only be accessed from within the block of code it was defined in.\/Protected/\The scope of a variable when it can only be accessed within the class it was defined in or by any classes that inherit it.\/Encapsulation/\The exposure of methods and attributes of an object while how they work is hidden. The user should only know how to use the object and not how it works.

Example: A vector object, the user should know how to use it to find the magnitude of a vector but not how the object actually finds the magnitude of a vector.\/Inheritance/\When one object inherits attributes and methods of another base object.

Example: You might have a base vehicle object with properties such as the number of wheels and a steering wheel and maybe methods such as drive(). You might make a specific type of vehicle that does these things above but a few extra that other vehicles don't, in this case this vehicle would inherit the base vehicle object.\/Composition/\When one object is made up of other objects by having them as its attributes. If the base object is destroyed, all the objects that make up the base object are also destroyed.\/Aggregation/\When one object is made up of other objects by having them as its attributes. If the base object is destroyed, the objects that make up the base object aren't always necessarily destroyed.\/Polymorphism/\When there are different subroutines with the same identifier that will perform different tasks based on their input.

Example: The add() function, when two integers are passed in, might add the two numbers together but, if two strings are input, it might concatenate them.\/Static/\A data type that will remain the same size.

Example: An array of fixed length 5.\/Dynamic/\A data type that has a size that can vary.

Example: A stack that changes size as you push and pop items to it.\/Queue/\An abstract data structure that is first in first out, the first item put into it will be the first item to be processed.\/Enqueue/\The method of a queue which adds a new item to the end of the queue.\/Dequeue/\The method of a queue which removes an item from the first position of the queue and shifts all the other elements forward by one.\/Stack/\An abstract first in last out data structure. The first item that is added is the last item that will be processed.\/Push/\The method of a stack that adds a new item to the top.\/Pop/\The method of a stack that removes the item that is at the top of the stack.\/Peek/\The method of a queue, stack, list, etc. It is used to look at the item that will be dealt with next without removing it.\/Graph/\A mathematical structure that models the relationship between pairs of objects.\/Nodes,Vertices/\The points in a graph where the items are located at.\/Connections,Edges/\The lines on a graph that connect the nodes together.\/Adjacency Matrix/\A way of representing which nodes are connected to each other by a structure where 1 represents a connection and 0 represents no connection.

This should be used when you do not have many nodes but have lots of connections.\/Adjacency List/\A table where on the left there is a list of all the nodes and on the right there is a list of the nodes that the corresponding node is connected to.

This should be used when you have a lot of nodes but not many connections.\/Weighted (Graph)/\A graph that has values on the connections representing how much it 'costs' to travel.

Example: A road map might be this type of graph as there will be distances on the roads.\/Directed (Graph)/\A graph that has connections that only allow you to travel in a single direction.

Example: A road map might be this type of graph is there is a one way street.\/Tree/\An abstract data structure that is very similar to a graph as it has nodes and edges. It is visualised as having a hierarchical structure with there being a single root node with all the other nodes being parents to it.

This type of graph cannot contain any loops or cycles.

Example: An OS might use it for its file structure.\/Binary Tree/\A tree where each node cannot have anymore than two children.\/Pre-Order (Tree Traversal)/\A type of tree traversal where you process the node first, then you check left node then the right node.

Use: Copying the tree.\/In-Order (Tree Traversal)/\A type of tree traversal where you check the left node, then process the node then the right node.

Use: Read the data in order.\/Post-Order (Tree Traversal)/\A type of tree traversal where you check the left and right children nodes, then you process the node.

Use: Deleting the tree.\/Hash Table/\A data structure usually made up of a table or array. The location of a piece of data within this structure is calculated using the data. 

Example: If you are storing data about students you might use their names to find a location.\/Thick (client)/\A computer that has all of its applications installed on its hard-drive.\/Thin (client)/\A computer that uses applications stored on the cloud and typically has one piece of software (usually a browser) to access the applications.\/JSON/\What language is this?

{
 "name":"adam",
 "age":"17,
 "subjects":[
 "Computer Science",
 "Further Maths"
 ]
}\/XML/\What language is this?

<note>
 <to>Someone</to>
 <from>Adam</from>
 <heading>Reminder</heading>
 <body>Don't forget about this weekend</body>
</note>\/CRUD/\An acronym that describes what every database should be able to do.\/REST/\The HTTP that performs the CRUD functions.\/Client/\A system that accesses a server.\/Server/\A computer that is configured to provide a service to the clients.\/RAID Array/\An array of hard-drives that all contain the same data. It can be used for a file server for many users to access.\/Port/\An addressable location on a network that links to a specific application or process.\/80/\The port reserved for HTTP.\/25/\The port reserved for SMTP.\/Socket/\An IP address followed by a port (IP : PORT).\/Port Forwarding/\A way of configuring your router to direct requests with a specific port to the correct application or process.\/DHCP (Dynamic Host Configuration Protocol)/\The protocol that is used by your ISP to assign your router with a new IP if your IP is dynamic.\/Routable (IP)/\A type of IP address that can accessed from anywhere on the internet\/Nonroutable (IP)/\A type of IP address that is usually located within a sub-net that cannot be accessed from the internet.\/IPv4/\An IP address that is represented using four octets.\/IPv6/\An IP address that is represented using hexadecimal.\/DNS/\A type of server that takes a request as a domain and returns the corresponding IP that allows you to start to 'wrap' your message using the TCP/IP protocols.\/Firewall/\A piece of software that can block specific ports, IP addresses and protocols and can search packets for specific strings of bits.\/Dynamic (IP)/\An IP address that changes when you restart your router.\/Static (IP)/\An IP address that stays the same when you restart your router.\/MAC Address/\A code that is assigned to a piece of hardware that does not change and is used to uniquely identify that bit of hardware.\/Protocol/\A set of rules used to allow two or more systems to communicate by making sure the data is readable by all of the systems.\/Fully Qualified Domain Name/\A URL that contains the WWW server.\/Top Level (Domain)/\'.com' is this type of domain\/Rounding (Error)/\A type of error when you have to round a value up or down so the value fits into a given number of bits.\/Absolute (Error)/\When you calculate a value, it is the difference between the calculated result and the expected result.\/Relative (Error)/\The absolute error divided by the intended value multiplied by 100 percent.\/Overflow/\When a calculation results in a value that is too big to be stored in a given number of bits.\/Underflow/\When a calculation results in a value that is too small as the number of bits lack the precision.\/7 (bits)/\The number of bits used by ASCII.\/8 (bits)/\The number of bits used by extended ASCII.\/Analogue/\A signal that can take any range of values.\/Digital/\A signal that can only take discrete values.\/Vector (Image)/\A type of image that is made up of a set of instructions.\/Nyquist's Theorem/\The sample rate must be at least twice the highest frequency.\/(The) Operating System/\It hides the complexity of the hardware from the user.\/High level (language)/\A user friendly language that needs to be compiled to machine code using either a compiler or an interpreter to run.\/Low level (language)/\A type of programming language that is written in hexadecimal and requires an assembler to convert it to machine code for the program to run.\/Machine code/\A type of programming language consisting of binary that does not need to be compiled to run.\/Compiler/\A type of program translator that coverts all of a high level language into machine code.\/Interpreter/\A type of program translator that converts a high level language, one line at a time, into machine code.\/Assembler/\A type of program translator that converts assembly language into machine code.\/(The) stored program concept/\Instructions in the form of machine code are stored in main memory and are fetched and executed one at a time.\/Fetch-Execute Cycle/\MAR <- PC
PC <- PC + 1
MBR <- MAR[addressed]
CIR <- MBR
DECODE
EXECUTE\/Synchronous Data Transmission/\Where two systems have their clocks synchronised based on pre-determined protocols.\/Asynchronous Data Transmission/\When two systems are not synchronised by their clocks so when data is sent between them, you include a start bit and an end bit.\/Hub/\A piece of hardware that, when it receives packets of data, it sends it to all of the devices connected to it.\/Router/\A piece of hardware that, when it receives packets of data, it only sends them to the device that the packets are meant to be sent to. Usually this is found between networks. This piece of hardware can look at the IP and decide where to route the data to in the world.\/Star/\A type of network topology that consists of one server with several clients, each connected to the server by a separate bus.\/Bus/\A type of network topology that consists of one server with a single wire connecting all of the clients.\/Internet/\The physical hardware that makes up the global network of networks.\/World Wide Web/\The web pages, data and files that are stored and use the internet.\/Uniform Resource Locator/\What does URL stand for?\/Packet Switching/\When a file is transferred on the internet, the file is broken down into packets, each packet is made up of a string of bits.

Each packet may take a different route on the internet depending on the traffic.\/Gateway/\The device you pass through to access the internet and to convert between different protocols.\/Telnet/\The protocol used for remote accessing a computer, usually for administration purposes.\/CSMA/CD/\The type of collision detection that makes the computers wait a random period of time before continuing to send data after a collision.\/Big Data/\Extremely large data sets that are difficult to store, process and analyse.\/Data/\Raw values with no context or meaning.\/Information/\Data that has been given context.\/Knowledge/\Something that you can deduce from the information.\/Structured Data/\Data in the form of tables and fields meaning it is easy to sort, query.\/1000 (Bytes)/\How many bytes are there in a Kilobyte?\/1024 (Bytes)/\How many bytes are there in a Kibibyte?\/1000000 (Bits)/\How many bits are there in a megabit?\/Domain/\The range of input values of a function.\/Codomain/\The range of output values of a function.\/8 (Bits)/\How many bits are there in a byte?\/Vector/\An abstract datatype that contains components (usually x, y and z) and is used to represent positions and directions.\/Dot Product/\What is the vector function called that when applied to the vectors a and b, is equal to 'ax×bx + ay×by).\/Subset/\The name of a set of values that contains all or some of the values from another set.\/Proper Subset/\The name of a set of values that contains some but strictly not all of the values from another set.\/Union/\The set of values that contains all of the values from both sets.\/Intersection/\The set of values that only contains the values that are found in both sets.\/65/\The denary ASCII value for a capital 'A'.\/Lossless (Compression)/\A type of compression that reduces file sizes while retaining the same quality.\/Lossy (Compression)/\A type of compression that reduces file sizes by reducing the quality of the image.\/Run Length Encoding/\A type of lossless compression that is used when there are lots of the same item in a row.

Example: In a logo image there are usually large blocks of the same colour.\/Plaintext/\The text that has been decrypted.\/Ciphertext/\The text that has been encrypted.\/Parallel (Data Transmission)/\A type of data transmission that involves several wires meaning several signals can be sent at once.\/Serial (Data Transmission)/\A type of data transmission that involves a single wire meaning only one signal can be sent at once.\/(Data) Skew/\The result of sending signals down parallel wires over long distances.\/Arithmetic Logic Unit/\The component of the processor that performs the logical and arithmetic operations.\/Register/\A small memory location found in the processor.\/Immediate (Addressing)/\The type of addressing where the operand of the instruction is the data.\/Direct (Addressing)/\The type of addressing where the operand of the instruction is the location of the data.\/Latency/\The time, usually in milliseconds, it takes for a packet of data to travel from one location to another.\/Directly Proportional/\The type of relationship is there between bit rate and bandwidth.\/WiFi/\A local area network that allows devices to connect wirelessly to a hub/router, usually to access the internet.\/SSID/\The name that is assigned to a network which is visible to the clients that want to connect to it.\/Local Area (Network)/\A type of network that is only located in a small area.

Example: A home network.\/Wide Area (Network)/\A type of network that is located across a large geographical area.

Example: The internet.\/Symmetric (Encryption)/\The type of encryption that uses a single key to encrypt and decrypt data.\/Asymmetric (Encryption)/\The type of encryption that uses one key to encrypt the data (usually a public key) and a different key to decrypt the data (usually a private key).\/Subnet Masking/\This is used to check if an IP address is located within a subnet or if the request has to be sent to the internet.\/Third Normal Form/\Every attribute is related to the key, the whole key and nothing but the key.\/Primary Key/\A unique code given to each attribute.

Example: A car's number plate.\/FIrst-Class Object/\This can be an argument of a function and also the result of a function call.\/Higher-Order (Function)/\A function that either takes a function as an input, returns a function as an output or both.\/Head/\The first element of a list.\/Tail/\All of the elements of a list except the first.\/Append/\A function that adds an item to the end of a list.\/Prepend/\A function that adds an item to the start of a list.\/Parameter/\A variable or value that is passed into a subroutine.\/Abstraction/\Hiding data that the user does not need to see.\/Model/\A simplified representation of reality used to simplify a problem.\/Binary/\The number system using base 2.\/Denary/\The number system using base 10.\/Hexadecimal/\The number system using base 16.\/n/\The minimum number of bits that are needed to represent 2^n different values.\/Two's Compliment/\The type of binary representation used for representing negative values.\/Parity (Bit)/\The name of the Bit that is added onto the end of a binary word to make the number of one's either odd or even as a way of performing error checking.\/Check Digit/\A digit that is added onto the end of a string that is calculated using the first part of the string, this is a way of performing error checking.\/Metadata/\The extra data stored about an image such as the image's colour depth, width and height.\/AND/\What logical operation is represented by this truth table?\/Big O (Notation)/\A type of notation that is used to used to describe how a function behaves as it tends to a specific value, usually either infinity or zero.

Example: In computing you can use use this notation to describe the performance of an algorithm, usually by describing the 'worst case' scenario.\/Pointer/\A variable that is declared, usually as an integer, to store the location of a memory address.\/Assignment/\Setting a variable to a specific value.\/Exponentiation/\Raising a number to a power.\/Merge (Sort)/\A recursive sorting algorithm that uses a 'divide and conquer' technique.\/Priority (Queue)/\A type of queue where some items are to be processed first over others.\/Magnitude/\The length of a vector.\/Breadth-First/\The algorithm typically used for traversing an unweighted graph.\/Depth-First/\The algorithm typically used for traversing a maze.\/Reverse Polish (Notation)/\What type of notation is this?

7 8 * 4 +\/Infix (Notation)/\What type of notation is this?

7 * 8 + 4\/Linear (Search)/\What search has a time complexity of O(n)?\/Binary (Search)/\What search has a time complexity of O(Log₂n)?\/Merge (Sort)/\What sort has a time complexity of O(nLog₂n)?\/Bubble (Sort)/\What sort has a time complexity of O(n²)?\/Shortest Path (Algorithm)/\What type of algorithm is Dijkstra's algorithm.\/Algorithm/\A sequence of unambiguous instructions to complete a task in a given time.\/Such That/\If you have the following set:

A = {x | x ∈ ℕ ∧ x ≥ 1 }

What does '|' mean?\/And/\In set theory, what does '∧' represent?\/Or/\In set theory, what does '∨' represent?\/Infinite (Set)/\A set that contains a range of continuous values.\/Finite (Set)/\A set that contains a range of countable discrete values.\/Cardinality/\The number of elements in a finite set.\/Union/\The set operation that returns a set of all of the values from the two sets.\/Intersection/\The set operation that returns a set of all of the values that are the same from the two sets.\/a*/\A regular expression that represents any number, including zero, of the letter 'a'.\/a+/\A regular expression that represents any number, *not* including zero, of the letter 'a'.\/a?/\A regular expression that represents either one or zero letter 'a's.\/a|b/\A regular expression that represents either the letter 'a' or the letter 'b'.\/Data Definition Language/\In the context of databases, what does DDL stand for?\/Tractable (Problem)/\A problem that can be solved in polynomial time.\/Backus-Naur Form/\What is the name for this type of language?

<digit> ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9
<integer> ::= <digit> | <digit><integer>\/Handshaking (Protocol)/\The protocol to check a device is connected and is ready to send data and to make sure the devices have agreed on how the data will be transmitted.\/Server-Side Script/\A sequence of instructions that is run on a web server when a web page is requested. This is usually used to generate the content of the website.\/Recursion/\The technique that can be used in Backus-Naur Form to perform iteration that cannot be used in regular expressions.\/Root Node/\The node of a tree of which all the other nodes are directed away from\/Intractable (Problem)/\A problem that exists and has no efficient solution and cannot be completed in polynomial time.\/Entity-Relationship (Diagram)/\In the context of databases, what is the name of this type of diagram?\/Structured Query Language/\What does SQL stand for?\/SELECT/\The SQL command used to *extract* data from a database.\/UPDATE/\The SQL command used to *change* data in a database.\/DELETE/\The SQL command used to *remove* data from a database.\/INSERT/\The SQL command used to *add* new data to a database.\/Normalisation/\In the context of floating point binary, what is done to maximise precision using the given number of bits?\/Inheritance (Diagram)/\What type of class diagram is this?\/Bluetooth/\A short range wireless signal used for transferring data, usually to create a personal area network.\/Universal (Turing Machine)/\A Turing machine that can simulate the behaviour of any other Turing machine and can complete any other computable sequence.\/Heuristic/\This is what a programmer might use to begin to solve an intractable problem, it makes a guess based on experience. This provides a close to optimal solution.\/System Development Life Cycle/\What is made up of the following five steps?

- Analysis
- Design
- Implementation
- Testing
- Evaluation\/Analogue to Digital Conversion/\What does ADC stand for?\/Digital to Analogue Conversion/\What does DAC stand for?\/GET/\The server script method that is used to get data from the *URL*.\/POST/\The server script method that is used to get data from a *form*.\/Random Access Memory/\What does RAM stand for?\/Bus/\The name for a wire.\/Load Into The Accumulator/\In assembly language, what does LDA stand for?\/(The) (Processor) Instruction Set/\All of the different operations that a processor can perform, it is usually different for each processor.\/Operator/\The left half of an instruction that states what will happen to the data.\/Operand/\The right half of an instruction that is the data that will be processed.\/Vectored (Addressing)/\A type of indirect addressing where the memory location you access contains a pointer to a different memory location.\/#/\In assembly language, what symbol is used to denote that a number used in the operand is a value instead of a memory location.\/Network/\Two or more computers connected together.\/(John) Von Neumann (Architecture)/\The type of computer architecture where data and instructions are stored in the same memory location.\/Harvard (Architecture)/\The type of computer architecture where data and instructions are stored in separate memory locations, this means separate buses are needed for data and instructions.\/Bar Code Reader/\A piece of hardware that is used to read a one dimensional series of black lines, this is usually used in a shop to gather data about the item, for example the price.\/QR Code Reader/\A piece of hardware that is used to read a black and white two dimensional code of squares, they are normally used to store URLs.\/Charged Coupled Device/\In a digital camera, what does CCD stand for?\/Radio Frequency/\In the context of RFID tags, what does the 'RF' stand for?\/Basic Input Output System/\When a computer is started up, the BIOS in run. What does BIOS stand for?\/Driver/\A piece of software that translates the signals from the hardware into calculations that the processor can perform.\/Magnetic Hard Drive/\A type of secondary storage that uses a change in polarisation of a magnet to represent a 1 and no change to represent a 0.\/Solid State Drive/\A type of secondary storage that used logic circuits to store the data, it has no moving parts.\/Read Only Memory/\A type of primary storage that cannot be edited. An example of this being used is to store the instruction set specific to that processor.\/Volatile (Memory)/\A type of memory that is lost when it loses power.\/Non-Volatile (Memory)/\A type of memory that is *not* lost when it loses power.\/Virtual Memory/\This is used when a program is to big to be entirely stored in ram and a section of the hard drive must be used.\/Software/\The programs or instructions that run on a computer to perform a specific task.\/Generic/\The type of software that can have many different uses.\/Specialist/\The type of software that only works for mainly one purpose.\/Bespoke/\The type of software that is specifically designed for one client and is generally expensive, takes a while to develop and difficult to maintain.\/System (Software)/\A type of software that is used to run the computer, the user does not interact with it.\/Sound Card/\The piece of hardware that converts analogue sound signals into digital signals.\/Sampling Resolution/\The number of bits per sample.\/Switch/\It is similar to a hub but it doesn't send the data to every client, it redirects the packets to the correct client. Usually they are found between network segments.\/FTP/\The protocol that is used to transfer files. It is used over HTTPS as if your connections is lost during a file transfer then your transfer progress is saved allowing you to continue.\/1600 (Hz)/\If you are converting sound that has a highest frequency of 800Hz, what is the minimum sample rate you should choose?\/Accessor (Method)/\A type of method used in a class that is used to return an attribute that is private.\/Hub /\An electronic device that runs a computer network.All data that arrives to one port is sent to all other ports (without looking at IP address for the data's destination).\/Switch /\A computer networking device that connects network segments within a network. Uses packet switching to receive and forward data to the destination device. This device can identify each device using its IP address.\/Router /\A device that forwards data packets between computer networks.\/Protocols /\Technical rules governing data communication\/TCP (Transmission Control Protocol) /\A connection-oriented, guaranteed-delivery
protocol used to send data packets between computers over a network like the Internet.\/IP(Internet Protocol) /\An agreed upon set of requirements for delivering packets across a network.It is used for relaying datagrams across network boundaries. Its routing function enables internetworking, and essentially establishes the Internet.\/HTTP /\The underlying protocol used by the World Wide Web and this protocol defines how messages are formatted and transmitted, and what actions Web servers and browsers should take in response to various commands.\/SMTP (Simple Mail Transfer Protocol) /\A communications protocol that enables sending email from a client to a server or between servers.\/Peer-to-peer network /\A network without a central file server and in which all computers in the network have access to the public files located on all other workstations\/Bit Torrent /\It is a peer-to-peer (P2P) file sharing protocol designed to reduce the bandwidth required to transfer files\/FTP (File Transfer Protocol) /\An internet standard protocol that permits file uploading and downloading to and from other computers on the internet\/Ring Topology /\A LAN configuration in which all nodes are connected in a closed loop\/Mesh Topology /\A network in which every computer connects to every other computer; no central connecting device is needed\/CSMA/CD /\Short for carrier sense multiple access with collision detection. It is the method for multiple hosts to communicate on a Ethernet.\/Circuit Switching /\A switching technique in which one endpoint creates a single path connection to another, depending on the requirement.\/Packet Switching /\Occurs when the sending computer divides a message into a number of efficiently sized units called packets, each of which contains the address of the destination computer\/PSTN (Public Switched Telephone Network) /\The network of lines and carrier equipment that provides telephone service to most homes and businesses. Now, except for the local loop, nearly all of the PSTN uses digital transmission. Its traffic is carried by fiber-optic or copper twisted-pair cable, microwave, and satellite connections.\/Broadcast /\Mode of transmission inwhich a message is delivered to all the recepients at once.\/Application Layer /\The fifth layer of the TCP/IP model. This layer's protocols enable software programs to negotiate formatting, procedural, security, synchronization, and other requirements with the network.\/MAC address /\Unique address embedded in network connected devices.\/Three ways a user can send a file from one end to other end using internet. /\Email (SMTP) , File Server download(FTP) , Peer to Peer sharing(Bit torrent)\/Star Topology /\A topology with one central node that has each computer or network device attached to the central node. All data first goes into the central node and then is sent out to its destination. (Think of it like a bicycle wheel with spokes.)\/Bus Topology /\A network layout in which there is one main trunk, or backbone, that all the various computers and network devices are connected to.\/Wide Area Network (WAN) /\A network that connects devices in geographically separated areas.\/WiMAX (Worldwide Interoperability for Microwave Access) /\Protocol designed for PSTN s to provide broadband access to teh internet without laying underground cables.\/define: tree /\a connected, undirected graph with no cycles\/define: connected (no cycles) /\there is exactly one path connecting any two nodes\/define: leaf /\a node with no children\/define: degree (in relation to trees) /\the number of child nodes a node has
→12 has a degree of 2\/define: binary tree /\a rooted tree where every node has at most 2 children\/define: binary search tree /\a tree in which every left node is less than its parent and the every right node is greater than its parent
→7 is less than 8, greater than 3 & 6
→use in-order traversal to gain values in ascending order\/define: breadth-first traversal /\begins at root and traverses each level
uses a queue
→F BG ADI CEH\/define: depth-first traversal /\begins at root and traverses each branch until reaching a leaf
uses a stack
→FBA DC E GIH\/pre-order traversal /\process self, left child, right child\/post-order traversal /\process left child, right child, self\/in-order traversal /\process left child, self, right child\/order traversal visualization /\→pre order traversal: FBADCEGIH\/define: contiguous /\neighbours in memory\/define: static /\fixed length\/define: mutable /\values can be changed during runtime\/define: array /\holds values of the same data type contiguously 
∙ static 
∙ mutable
→usually stores related items\/define: record /\consists of a static number of variables called fields
each field has a name & data type\/define: list /\collection of data items that implies some order
∙ dynamic
∙ mutable\/define: linked-list /\implementation of list
∙ each element is a node
∙ consists of a value & pointer
∙ head has null value when list is empty\/define: graph /\diagram that models relationships between objects
→transport networks: towns are nodes\/define: cycle (in relation to graphs) /\closed path; trail that starts and ends at the same vertex, no other vertex is visited more than one\/define: degree (in relation to graphs) /\the number of vertices a vertex is connected to
→3 has a degree of 2\/weighted graphs /\has a numerical value attached to edge
→used to find shortest path\/directed graphs /\arrows restrict direction 
→like a one way street\/adjacency matrix /\record relationship between each vertex and all other vertices
∙ if there is no edge, a very large number is used
∙ 1s and 0s are used for unweighted graphs
→B & D share an edge valued at 15\/adjacency list /\records relationship between each vertex and all relevant vertices
∙ doesn't record any value for unweighted graphs\/define: stack /\a LIFO or FILO data structure
can be static or dynamic
→stack of plates\/main stack operations /\∙push(data): value added to top of stack
∙pop(): top value removed and returned
∙peek(): top value returned without being removed
∙empty(): checks if stack is empty
∙full(): checks if stack is full\/define: queue /\a FIFO data structure\/main queue operations /\∙enqueue(data): value added to back of queue
∙dequeue(): front value removed and returned
∙empty(): checks if queue is empty
∙full(): checks if queue is full\/define: hash table /\data structure similar to a table that uses hashing to create mapping between the key and the values
∙big O notation: best & average O(1); worst O(n)\/hashing /\applying a hashing algorithm to a piece of data (key) to create a hash value\/hash algorithm key features /\∙unique: two keys shouldn't result in the same value
∙repeatable: applying the algorithm to the same key should always give the same result
∙irreversible: shouldn't be able to retrieve the key by examining the value\/hashing collisions /\when multiple keys result in the same hash value\/closed hashing (open addressing) /\hashing collision solution: the colliding key is placed in the next free location
→John Smith & Sandra Doe has the hash value 152
→John smith entered first; 152
→Sandra Doe entered; placed in the next space; 153
→Ted Baker entered; hash value 153; placed in next space; 154\/open hashing (closed addressing) /\hashing collision solution: colliding keys are placed in the same location, using a linked list
